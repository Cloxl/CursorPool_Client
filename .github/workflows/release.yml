name: Release Build
on:
  release:
    types: [created]

permissions:
  contents: write
  packages: write
  releases: write

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]
        
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        
      - name: Install dependencies (Windows only)
        if: matrix.platform == 'windows-latest'
        run: |
          rustup target add x86_64-pc-windows-msvc
          
      - name: Install frontend dependencies
        run: npm install
        
      - name: Build the app
        run: npm run tauri build
        
      - name: Upload Windows build artifacts
        if: matrix.platform == 'windows-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.event.release.tag_name }} "./src-tauri/target/release/bundle/msi/*.msi" --clobber
          gh release upload ${{ github.event.release.tag_name }} "./src-tauri/target/release/bundle/nsis/*.exe" --clobber

      - name: Update release notes
        if: matrix.platform == 'windows-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release edit ${{ github.event.release.tag_name }} --notes "
          ## Windows 安装包
          - MSI 安装包 (推荐): [cursor-pool_${{ github.event.release.tag_name }}_x64.msi]
          - EXE 安装包: [cursor-pool_${{ github.event.release.tag_name }}_x64-setup.exe]
          
          ## 更新内容
          ${{ github.event.release.body }}
          " 